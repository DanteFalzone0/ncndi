<ws> ::= " " <opt_ws> | "\n" <opt_ws> | "\r" <opt_ws> | "\t" <opt_ws>

<opt_ws> ::= <ws> | ""

<program> ::= <function_list> <program> | "start" <opt_ws> "{" <statement_list> "}" <opt_ws> "end"

<statement_list> ::= <statement> | <statement> <statement_list>

<function_list> ::= <function_decl> | <function_decl> <function_list>

<parameter_list> ::= <opt_ws> | <variable_decl> | <variable_decl> "," <opt_ws> <parameter_list>

<function_decl> ::= "funct" <ws> <identifier> <opt_ws> "(" <parameter_list> ")"
                    <opt_ws> [<type_identifier>] <opt_ws> "{" <statement_list> "}"

<function_call> ::= <identifier> <opt_ws> "(" <argument_list> ")"

<argument_list> ::= <opt_ws> | <expression> | <expression> "," <opt_ws> <argument_list>

<statement> ::= <assignment_statement> ";"
              | <variable_decl> ";"
              | <reassignment_statement> ";"
              | <print_statement> ";"
              | <function_call> ";"
              | <if_statement>
              | <while_loop>
              | <for_loop>
              | <return_statement> ";"
              | <opt_ws>
              | <statement> ";"
              | <ws> <statement>
              | <statement> <ws>

<return_statement> ::= "return" <ws> <expression>

<while_loop> ::= "while" <ws> <expression> <opt_ws> "{" <statement_list> "}" 

<for_loop> ::= "for" <statement> ";" [<expression>] ";" <statement> "{" <statement_list> "}"

<if_statement> ::= "if" <ws> <expression> <opt_ws> "{" <statement_list> "}" [<else_statement>]

<else_statement> ::= "else" <opt_ws> "{" <statement_list> "}" | "else" <if_statement>

<print_statement> ::= "print" <ws> <expression>

<assignment_statement> ::= <type_identifier> <ws> <identifier> <opt_ws> "=" <opt_ws> <expression>

<reassignment_statement> ::= <identifier> <opt_ws> <assignment_operator> <opt_ws> <expression>

<assignment_operator> ::= "+=" | "-=" | "*=" | "/=" | "="

<variable_decl> ::= <type_identifier> <ws> <identifier>

<relational> ::= ">" | "==" | "<" | "<=" | ">=" | "!="

<logical> ::= "&&" | "||" | "<>"

<expression> ::= <comparison> [<opt_ws> <logical> <opt_ws> <comparison>]+

<comparison> ::= ["!" <opt_ws>] <math_expression> [<opt_ws> <relational> <opt_ws> <math_expression>]+

<math_expression> ::= <term> [<opt_ws> ("+" | "-") <opt_ws> <term>]+

<term> ::= <factor> [<opt_ws> ("*" | "/") <opt_ws> <factor>]+

<factor> ::= "+" <opt_ws> <factor>
           | "-" <opt_ws> <factor>
           | "!" <opt_ws> <expression>
           | <integer>
           | <float>
           | <string_literal>
           | "(" <opt_ws> <expression> <opt_ws> ")"
           | <identifier>
           | <function_call>
           | <if_statement>

<type_identifier> ::= "float" | "int" | "string"
