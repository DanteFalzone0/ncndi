# TODO: rewrite this so it's in _ACTUAL_ Backus-Naur Form

program : (function_list) 'start' OPEN_BRACE statement_list CLOSE_BRACE 'end'

statement_list : statement | statement SEMICOLON statement_list

function_list: function_declaration | function_declaration function_list

parameter_list: empty | variable_declaration(COMMA (variable_declaration|parameter_list))

function_declaration: 'funct' IDENTIFIER OPEN_PAREN parameter_list CLOSE_PAREN (TYPE) OPEN_BRACE statement_list CLOSE_BRACE

function_call: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN

argument_list: empty | expression(COMMA (expression|argument_list))

statement: assignment_statement
         | variable_declaration
         | reassignment_statement
         | print_statement
         | empty
         | function_call
         | if_statement
         | while_loop
         | return_statement

return_statment: RETURN expression

while_loop: WHILE expression OPEN_BRACE statement_list CLOSE_BRACE

if_statement: IF expression OPEN_BRACE statement_list CLOSE_BRACE (else_statement)

else_statement: else (if_statement | OPEN_BRACE statement_list CLOSE_BRACE)

print_statement: PRINT expression

assignment_statement: TYPE variable ASSIGN expression

reassignment_statement: variable ASSIGN expression

variable_declaration: TYPE variable

empty:

relational: GREATER_THAN | EQUALS | LESS_THAN | LESS_EQ | GREATER_EQ | NOT_EQ

expression: comparison ((AND | OR | XOR) comparison)*

comparison: (NOT) math_expression ((relational) math_expression)*

math_expression: term ((PLUS | SUBTRACT) term)*

term: factor ((MULTIPLY | DIVIDE) factor)*

factor: PLUS factor
      | SUBTRACT factor
      | NOT expression
      | INTEGER
      | OPEN_PAREN expression CLOSE_PAREN
      | variable
      | function_call
      | if_statement

variable: IDENTIFIER

TYPE : 'float' | 'int' | 'string'
